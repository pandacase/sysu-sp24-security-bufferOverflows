b url_decode 
c
info reg
x/10x 0x7fffffffdc30
c
r
r
q
b url_decode
c
info reg
x/10x 0x7fffffffdc30
q
b url_decode
c
print sec
print src
n
n
n
n
n
n
n
q
b url_decode
c
q
b url_decode
c
info frame
bt
c
c
c
c
c
c
r
c
q
b url_decode
c
q
b process_client
c
info frame
p $reqpath
p reqpath
p &reqpath
 q
b http.c:107
c
tb
bt
q
b process_client
c
bt
q
b http_request_line
c
bt
q
b http.c:107
c
bt
q
b http.c:107
c
bt
print reqpath
print reqpath+8
q
b http.c:161
c
p &value[0]
q
b http.c:161
c
q
b http.c:161
c
p &value[0]
p value
p &value
info frame
q
b http.c:161
c
bt
info frame
print value
n
n
n
n
n
n
n
n
n
n
n
n
q
b http.c:161
c
p value
bt
print &value
info registers 
info frame
p fd
p &fd
info frame
bt
x/gx  0x7fffffffdc88
x/gx 0x7fffffffdc80
print value
print value+8
print value+512
print value+512+56
bt
n
n
n
n
n
n
n
n
n
nt
bt
q
n
n
q
b http.c:161
c
print value
print &value
print 0x7fffffffda50
print (char *)0x7fffffffda50
bt
print (char *)0x7fffffffffffda50 
print (char *)0x7fffda50 
print (char *)0x7fffffffda50
print (char *)0x00007fffffffda50
q
b http.c:161
c
bt
print (char *)0x000055007fffda50
q
b http.c:161
c
bt
print (char*)0x00007fffffffda50
q
b http_request_headers
c
print &value
info frame
bt
q
b http.c:163
c
bt
b http.c:156
c
p unlink
p exit
p $rbp
info frame
p %rbp
p rbp
info registers rbp
info registers rip
bt
info registers rbp
info frame
print 0x7fffffffdc80
print (void *)0x7fffffffdc80
print (char *)0x7fffffffdc80
print (int *)0x7fffffffdc80
pring &value
p &value
p (char *)0x7fffffffda50
p value
info frame
info reg
x/gx 0x7fffffffdc80
x/gx 0x7fffffffdc88
x value
x 0x7fffffffdc80
x 0x7fffffffdc88
x /8xb 0x7fffffffdc80
x /2xg 0x7fffffffdc80
x 0x7fffffffdc80 + 16
x 0x7fffffffdc80 + 8 + 8
x 0x7fffffffdc80 + 8 + 8 + 8
info frame
info frame 0
info frame 1
p accidentally
p unlink
p exit
q
b http.c:163
c
bt
q
